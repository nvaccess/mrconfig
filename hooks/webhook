#!/usr/bin/env python3

import sys
import logging
import subprocess
import os
from datetime import datetime

print("Content-type: text/plain\n")
print("starting")

logging.basicConfig(
	# This process is run as user nvdal10n, which does not have write permissions for
	# /var/log/uwsgi/app/ so instead of writing to file, write to stderr.
	# stderr is logged to /var/log/uwsgi/app/nvdal10n.log by nginx/fastcgi
	level=logging.DEBUG,
	stream=sys.stderr,
)

startDate = datetime.now().strftime("%Y-%b-%d %H:%M:%S")
logging.info(f"Webhook starting: {startDate}")

SCRIPTS_PATH = os.path.abspath('../mr/scripts')

try:
	proc = subprocess.Popen(
		(os.path.join(SCRIPTS_PATH, "webhook")),
		cwd=SCRIPTS_PATH,
		stdout=subprocess.PIPE,
		stderr=subprocess.PIPE,
		errors="UTF-8",
		encoding="UTF-8",
	)
	# https://docs.python.org/3.7/library/subprocess.html#subprocess.Popen.stderr
	#  If the encoding or errors arguments were specified or the universal_newlines argument was True,
	#  the stream is a text stream, otherwise it is a byte stream. If the stderr argument was not PIPE,
	#  this attribute is None.
	WAIT_MINUTES = 5
	MINUTE_SECONDS = 60
	try:
		outs, errs = proc.communicate(timeout=MINUTE_SECONDS * WAIT_MINUTES)
	except subprocess.TimeoutExpired:
		logging.error("TimeoutExpired. Process Killed.")
		proc.kill()
		outs, errs = proc.communicate()
	logging.debug(f"scripts\\webHook:\n{outs}")
	if errs:
		logging.error(f"scripts\\webhook:\n{errs}")

except Exception as e:
	logging.error(f"Error running process: {e}")

endDate = datetime.now().strftime("%Y-%b-%d %H:%M:%S")
logging.info(f"Webhook finished: {endDate}")
print("ok")
